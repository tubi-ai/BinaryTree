package com.company;

class Node {
    int data;
    Node left, right;

    Node(int d) {
        data = d;
        left = right = null;
    }
}
class Height {
    int height = 0;
}
class BinaryTree {
    Node root;
    boolean checkHeightBalance(Node root, Height height) {

        if (root == null) {
            height.height = 0;
            return true;
        }
        Height lefth = new Height(), righth = new Height();
        boolean l = checkHeightBalance(root.left, lefth);
        boolean r = checkHeightBalance(root.right, righth);
        int leftHeight = lefth.height, rightHeight = righth.height;

        height.height = (Math.max(leftHeight, rightHeight)) + 1;

        if (Math.abs(leftHeight - rightHeight) >= 2) {
            return false;
        } else
            return l && r;
    }
}
public class Main {
    public static void main(String[] args) {
        Height height = new Height();

        BinaryTree tree = new BinaryTree();
        tree.root = new Node(1);
        tree.root.left = new Node(2);
        tree.root.right = new Node(3);
        tree.root.left.left = new Node(4);
        tree.root.left.right = new Node(5);

        if (tree.checkHeightBalance(tree.root, height))
            System.out.println("The tree is balanced");
        else
            System.out.println("The tree is not balanced");

    }
}
